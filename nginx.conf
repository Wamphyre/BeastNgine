user  www;
worker_processes  auto;
worker_rlimit_nofile 22500;
load_module /usr/local/libexec/nginx/ngx_http_modsecurity_module.so;
load_module /usr/local/libexec/nginx/ngx_http_brotli_filter_module.so;
load_module /usr/local/libexec/nginx/ngx_http_brotli_static_module.so;

events {
    worker_connections  22500;
    use kqueue;
    multi_accept on;
}

http {
    #General Settings
    server_names_hash_bucket_size  1024;
    server_names_hash_max_size     1024;
    types_hash_max_size            2048;
    client_body_buffer_size        16k;
    client_max_body_size           2048m;
    client_body_in_single_buffer   on;
    client_body_in_file_only       clean;
    client_body_timeout            30s; # Use 5s for high-traffic sites
    client_header_timeout          30s; # Use 5s for high-traffic sites
    keepalive_timeout 90;
    send_timeout 90;
    reset_timedout_connection on;
    keepalive_requests 4096;
    large_client_header_buffers 4  8k;
    open_file_cache                max=200000 inactive=20s;
    open_file_cache_errors         on;
    open_file_cache_min_uses       2;
    open_file_cache_valid          30s;
    server_name_in_redirect        off;
    server_tokens                  off;
    port_in_redirect               off;
    include       mime.types;
    default_type  application/octet-stream;

    sendfile       on;
    aio            on;
    tcp_nopush     on;
    tcp_nodelay    on;

    fastcgi_cache_path /tmp/nginx levels=1:2 keys_zone=WORDPRESS:512m;
    fastcgi_cache_key "$scheme$request_method$host$request_uri";
    fastcgi_ignore_headers Cache-Control Expires Set-Cookie;    
    add_header        X-Server-Powered-By "BeastNgine: https://github.com/Wamphyre/BeastNgine";

   #Brotli settings
   brotli on;
   brotli_comp_level 6;   
   brotli_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

   # security headers
   add_header X-Frame-Options "SAMEORIGIN" always;
   add_header X-XSS-Protection "1; mode=block" always;
   add_header X-Content-Type-Options "nosniff" always;
   add_header Referrer-Policy "no-referrer-when-downgrade" always;
   add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
    
   # SSL Settings
   ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
   ssl_prefer_server_ciphers on;
   # Optimize session cache
   ssl_session_cache shared:SSL:50m;
   ssl_session_timeout 1d;
   # Enable session tickets
   ssl_session_tickets on;
   # OCSP Stapling
   ssl_stapling on;
   ssl_stapling_verify on;
   resolver 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=60s;
   resolver_timeout 2s;

    ## Real IP Forwarding ##
    set_real_ip_from 127.0.0.1;

    # Replace with correct visitor IP
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
    
    # CloudFlare IPs
    # List from: https://www.cloudflare.com/ips-v4
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 104.16.0.0/12;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    # List from: https://www.cloudflare.com/ips-v6
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2c0f:f248::/32;
    set_real_ip_from 2a06:98c0::/29;

  #Modsecurity
  modsecurity on;
  modsecurity_rules_file /usr/local/etc/modsecurity/modsecurity.conf; 
  modsecurity_rules_file /usr/local/etc/modsecurity/crs-setup.conf;
  modsecurity_rules_file /usr/local/etc/modsecurity/ip_blacklist.conf;

  server {
        #Block access to server IP
        listen 8080;
        server_name  "";  #default
        return 444;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/local/www/nginx-dist;
        }

    }
  #Server blocks    
  include               conf.d/*;
}
